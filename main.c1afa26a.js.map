{"version":3,"sources":["scripts/main.js"],"names":["cells","document","querySelectorAll","gameScore","querySelector","gameMsgStart","gameMsgWin","gameMsgLose","startBtn","restartBtn","fieldCells","width","score","createInitialGameField","i","innerHTML","push","startGame","classList","add","remove","generateNum","restartGame","contains","randomNumber","Math","floor","random","length","applyColorStyles","checkForGameOver","moveByHorizontalAxis","direction","firstCell","rowWithoutZero","filter","num","missingCells","zeroCells","Array","fill","newRow","concat","moveByVerticalAxis","columnWithoutZero","newColumn","mergeCellsHorizontally","total","checkWinCombination","mergeCellsVertically","assignByKeyCode","keyCode","fieldCellsValues","map","item","moveLeft","moveUp","moveRight","moveDown","Error","every","_","removeEventListener","currentCellValue","addEventListener"],"mappings":"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","file":"main.c1afa26a.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst cells = document.querySelectorAll('.field-cell');\nconst gameScore = document.querySelector('.game-score');\nconst gameMsgStart = document.querySelector('.message-start');\nconst gameMsgWin = document.querySelector('.message-win');\nconst gameMsgLose = document.querySelector('.message-lose');\nconst startBtn = document.querySelector('.start');\nconst restartBtn = document.querySelector('.restart');\nconst fieldCells = [];\nconst width = 4;\nlet score = 0;\n\nstartBtn.addEventListener('click', startGame);\nrestartBtn.addEventListener('click', restartGame);\n\nfunction createInitialGameField() {\n  for (let i = 0; i < width * width; i++) {\n    cells[i].innerHTML = '0';\n    fieldCells.push(cells[i]);\n  }\n}\ncreateInitialGameField();\n\nfunction startGame() {\n  gameMsgStart.classList.add('hidden');\n  startBtn.classList.add('hidden');\n  restartBtn.classList.remove('hidden');\n\n  generateNum();\n  generateNum();\n}\n\nfunction restartGame() {\n  score = 0;\n  gameScore.innerHTML = '0';\n\n  if (!gameMsgLose.classList.contains('hidden')) {\n    gameMsgLose.classList.add('hidden');\n  }\n\n  if (!gameMsgWin.classList.contains('hidden')) {\n    gameMsgLose.classList.add('hidden');\n  }\n  createInitialGameField();\n  generateNum();\n  generateNum();\n}\n\nfunction generateNum() {\n  const randomNumber = Math.floor(Math.random() * fieldCells.length);\n\n  if (fieldCells[randomNumber].innerHTML === '0') {\n    fieldCells[randomNumber].innerHTML = Math.random() > 0.9 ? '4' : '2';\n    applyColorStyles();\n    checkForGameOver();\n  } else {\n    generateNum();\n  }\n}\n\nfunction moveByHorizontalAxis(direction) {\n  for (let i = 0; i < 16; i++) {\n    if (!(i % 4)) {\n      const firstCell = fieldCells[i].innerHTML;\n      const secondCell = fieldCells[i + 1].innerHTML;\n      const thirdCell = fieldCells[i + 2].innerHTML;\n      const forthCell = fieldCells[i + 3].innerHTML;\n      const row = [+firstCell, +secondCell, +thirdCell, +forthCell];\n\n      const rowWithoutZero = row.filter(num => num);\n      const missingCells = 4 - rowWithoutZero.length;\n      const zeroCells = Array(missingCells).fill(0);\n\n      const newRow = (direction === 'left')\n        ? rowWithoutZero.concat(zeroCells)\n        : zeroCells.concat(rowWithoutZero);\n\n      fieldCells[i].innerHTML = newRow[0];\n      fieldCells[i + 1].innerHTML = newRow[1];\n      fieldCells[i + 2].innerHTML = newRow[2];\n      fieldCells[i + 3].innerHTML = newRow[3];\n    }\n  }\n  applyColorStyles();\n}\n\nfunction moveByVerticalAxis(direction) {\n  for (let i = 0; i < 4; i++) {\n    const firstCell = fieldCells[i].innerHTML;\n    const secondCell = fieldCells[i + width].innerHTML;\n    const thirdCell = fieldCells[i + (width * 2)].innerHTML;\n    const forthCell = fieldCells[i + (width * 3)].innerHTML;\n    const column = [+firstCell, +secondCell, +thirdCell, +forthCell];\n\n    const columnWithoutZero = column.filter(num => num);\n    const missingCells = 4 - columnWithoutZero.length;\n    const zeroCells = Array(missingCells).fill(0);\n\n    const newColumn = (direction === 'up')\n      ? columnWithoutZero.concat(zeroCells)\n      : zeroCells.concat(columnWithoutZero);\n\n    fieldCells[i].innerHTML = newColumn[0];\n    fieldCells[i + width].innerHTML = newColumn[1];\n    fieldCells[i + (width * 2)].innerHTML = newColumn[2];\n    fieldCells[i + (width * 3)].innerHTML = newColumn[3];\n  }\n  applyColorStyles();\n}\n\nfunction mergeCellsHorizontally() {\n  for (let i = 0; i < 15; i++) {\n    if (fieldCells[i].innerHTML === fieldCells[i + 1].innerHTML) {\n      const total = +fieldCells[i].innerHTML + +fieldCells[i + 1].innerHTML;\n\n      fieldCells[i].innerHTML = total;\n      fieldCells[i + 1].innerHTML = '0';\n      score += total;\n      gameScore.innerHTML = score;\n    }\n  }\n  checkWinCombination();\n}\n\nfunction mergeCellsVertically() {\n  for (let i = 0; i < 12; i++) {\n    if (fieldCells[i].innerHTML === fieldCells[i + width].innerHTML) {\n      const total\n          = +fieldCells[i].innerHTML + +fieldCells[i + width].innerHTML;\n\n      fieldCells[i].innerHTML = total;\n      fieldCells[i + width].innerHTML = 0;\n      score += total;\n      gameScore.innerHTML = score;\n    }\n  }\n  checkWinCombination();\n}\n\nfunction assignByKeyCode({ keyCode }) {\n  const fieldCellsValues = fieldCells.map(item => item.innerHTML);\n\n  switch (keyCode) {\n    case 37: moveLeft();\n      break;\n    case 38: moveUp();\n      break;\n    case 39: moveRight();\n      break;\n    case 40: moveDown();\n      break;\n    default: throw new Error('Wrong keyCode');\n  }\n\n  const isEqual = fieldCells.every((_, i) =>\n    fieldCells[i].innerHTML === fieldCellsValues[i]);\n\n  if (isEqual) {\n    return;\n  }\n\n  generateNum();\n}\n\ndocument.addEventListener('keydown', assignByKeyCode);\n\nfunction moveRight() {\n  moveByHorizontalAxis('right');\n  mergeCellsHorizontally();\n  moveByHorizontalAxis('right');\n}\n\nfunction moveLeft() {\n  moveByHorizontalAxis('left');\n  mergeCellsHorizontally();\n  moveByHorizontalAxis('left');\n}\n\nfunction moveUp() {\n  moveByVerticalAxis('up');\n  mergeCellsVertically();\n  moveByVerticalAxis('up');\n}\n\nfunction moveDown() {\n  moveByVerticalAxis('down');\n  mergeCellsVertically();\n  moveByVerticalAxis('down');\n}\n\nfunction checkWinCombination() {\n  for (let i = 0; i < fieldCells.length; i++) {\n    if (fieldCells[i].innerHTML === '2048') {\n      gameMsgWin.classList.remove('hidden');\n      document.removeEventListener('keydown', assignByKeyCode);\n    }\n  }\n}\n\nfunction checkForGameOver() {\n  for (let i = 0; i < 15; i++) {\n    if (fieldCells[i].innerHTML === fieldCells[i + 1].innerHTML) {\n      return;\n    }\n  }\n\n  for (let i = 0; i < 12; i++) {\n    if (fieldCells[i].innerHTML === fieldCells[i + width].innerHTML) {\n      return;\n    }\n  }\n\n  let zeroCells = 0;\n\n  for (let i = 0; i < fieldCells.length; i++) {\n    if (fieldCells[i].innerHTML === '0') {\n      zeroCells++;\n    }\n  }\n\n  if (!zeroCells) {\n    gameMsgLose.classList.remove('hidden');\n    document.removeEventListener('keydown', assignByKeyCode);\n  }\n}\n\nfunction applyColorStyles() {\n  for (let i = 0; i < fieldCells.length; i++) {\n    const currentCellValue = fieldCells[i];\n\n    switch (currentCellValue.innerHTML) {\n      case '0': currentCellValue.classList = 'field-cell';\n        break;\n      case '2': currentCellValue.classList = 'field-cell field-cell--2';\n        break;\n      case '4': currentCellValue.classList = 'field-cell field-cell--4';\n        break;\n      case '8': currentCellValue.classList = 'field-cell field-cell--8';\n        break;\n      case '16': currentCellValue.classList = 'field-cell field-cell--16';\n        break;\n      case '32': currentCellValue.classList = 'field-cell field-cell--32';\n        break;\n      case '64': currentCellValue.classList = 'field-cell field-cell--64';\n        break;\n      case '128': currentCellValue.classList = 'field-cell field-cell--128';\n        break;\n      case '256': currentCellValue.classList = 'field-cell field-cell--256';\n        break;\n      case '512': currentCellValue.classList = 'field-cell field-cell--512';\n        break;\n      case '1024': currentCellValue.classList = 'field-cell field-cell--1024';\n        break;\n      case '2048': currentCellValue.classList = 'field-cell field-cell--2048';\n        break;\n    }\n  }\n}\n"]}